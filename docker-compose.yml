version: '2.1'
services:
  db:
    image: postgres:10.5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: always
    volumes:
      - /tmp/postgresql/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5  

  rabbitmq:
    image: "rabbitmq:3.7.7-management"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - ./rabbitmq-isolated.conf:/etc/rabbitmq/rabbitmq.config
    healthcheck:
      test: ["CMD-SHELL", "if rabbitmqctl status; then \nexit 0 \nfi \nexit 1"]
      interval: 10s
      retries: 5

  web:
    image: evanilukhin/rock:0.1.0
    environment:
      # Variables to connect to our Postgres server
      ROCK_USER: postgres
      ROCK_PASS: postgres
      ROCK_DATABASE: rock_db
      ROCK_HOST: db
      ROCK_PORT: 5432
      RABBIT_LOGIN: guest
      RABBIT_PASS: guest
      RABBIT_HOST: rabbitmq
    ports:
      - "5000:5000"
    restart: always
    depends_on:
     rabbitmq:
       condition: service_healthy
     db:
       condition: service_healthy

  bot:
    image: evanilukhin/rock_bot:0.1.0
    environment:
      RABBIT_LOGIN: guest
      RABBIT_PASS: guest
      RABBIT_HOST: rabbitmq
      TELEGRAM_BOT_TOKEN: "${TELEGRAM_BOT_TOKEN}"
      TELEGRAM_API_BASE_URL: "${TELEGRAM_API_BASE_URL}"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://rabbitmq:15672/api/aliveness-test"]
      interval: 1m30s
      timeout: 10s
      retries: 3
    depends_on:
     rabbitmq:
       condition: service_healthy
